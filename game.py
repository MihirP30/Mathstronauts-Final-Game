import pgzrunfrom random import *WIDTH = 1000HEIGHT = 600score = 0Red = (255,0,0)BACKGROUND_IMAGE = "space_game_background"JUNK_IMG = "space_junk"SATELLITE_IMG = "satellite_adv"DEBRIS_IMG = "tesla_roadster"LASER_IMG = "laser_red"junks = []for i in range(5):    junk = Actor(JUNK_IMG)    junk.pos = (randint(-500, -50),HEIGHT/2)    junks.append(junk)satellite = Actor(SATELLITE_IMG)x_sat = randint(-500, -50)y_sat = randint(60, HEIGHT - satellite.height)satellite.topright = (x_sat, y_sat)debris = Actor(DEBRIS_IMG)x_deb = randint(-500, -50)y_deb = randint(60, HEIGHT - debris.height)debris.topright = (x_deb, y_deb)lasers = []player = Actor('player_ship')player.midright = (WIDTH - 15, HEIGHT/2)def junk_update():    global score        for junk in junks:        junk.x += 5        score_board_height = 60                collision = player.colliderect(junk)            if (junk.left > WIDTH or collision == 1):            x_pos = 0            y_pos = randint(score_board_height, HEIGHT-junk.height)            junk.topleft = (x_pos,y_pos)        if (collision == 1):            score += 1            sounds.collect_pep.play()def satellite_update():    global score    satellite.x += 5    collision = player.colliderect(satellite)        if satellite.left > WIDTH or collision == 1:        x_sat = randint(-500, -50)        y_sat = randint(60, HEIGHT - satellite.height)        satellite.topright = (x_sat, y_sat)    if collision == 1:        score += -10        sounds.explosion.play()def debris_update():    global score    debris.x += 2    collision = player.colliderect(debris)        if debris.left > WIDTH or collision == 1:        x_sat = randint(-500, -50)        y_sat = randint(60, HEIGHT - debris.height)        debris.topright = (x_deb, y_deb)    if collision == 1:        score = 0        sounds.explosion.play()def lasers_update():    global score    for laser in lasers:        laser.x += -5        score_board_height = 60        if laser.right < 0:            lasers.remove(laser)        if satellite.colliderect(laser) == 1:            lasers.remove(laser)            x_sat = randint(-500, -50)            y_sat = randint(score_board_height, HEIGHT - satellite.height)            satellite.topright = (x_sat, y_sat)            score += -5        if debris.colliderect(laser) == 1:            lasers.remove(laser)            x_debris = randint(-500, -50)            y_debris = randint(score_board_height, HEIGHT - debris.height)            debris.topright = (x_debris, y_debris)            score += 5def player_update():    if (keyboard.up == 1):        player.y += (-5)    elif (keyboard.down == 1):        player.y += (5)    if player.top < 60:        player.top = 60    if player.bottom > HEIGHT:        player.bottom = HEIGHT    if keyboard.space == 1:        laser = Actor(LASER_IMG)        laser.midright = (player.midleft)        fireLasers(laser)sounds.spacelife.play(-1)def update():    player_update()    junk_update()    satellite_update()    debris_update()    lasers_update()def draw():    screen.clear()    screen.blit(BACKGROUND_IMAGE,(0,0))    player.draw()    satellite.draw()    debris.draw()    for junk in junks:        junk.draw()    for laser in lasers:        laser.draw()    #display text on the screen    show_score = "Score: " + str(score)    screen.draw.text(show_score, topleft=(700,15), fontsize = 35, color = "white")# activating lasers (template code - DO NOT DELETE)player.laserActive = 1def makeLaserActive():    global player    player.laserActive = 1def fireLasers(sprite):    if player.laserActive == 1:  # active status is used to prevent continuous shoot when holding space key        player.laserActive = 0        clock.schedule(makeLaserActive, 0.2)  # schedule an event (function, time afterwhich event will occur)        sounds.laserfire02.play()        lasers.append(sprite)        lasers[len(lasers) - 1].status = 0pgzrun.go()